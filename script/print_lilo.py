import serial
import time

# Serielle Verbindung konfigurieren
ser = serial.Serial('/dev/ttyS0', 9600, timeout=1)

# Warten, bis die Verbindung hergestellt ist
time.sleep(2)

# Bitmap-Daten // 'lilo_logo128', 128x55px
bitmap_data = [
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xf1, 0xe0, 0x03, 0xff, 0xff, 0xff, 0x00, 0x00, 0x01, 0xff, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xf1, 0xe0, 0x03, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xfe, 
0x0f, 0xff, 0x00, 0x01, 0xff, 0xf1, 0xe0, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xf1, 0xe0, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xf1, 0xe0, 0x03, 0xff, 0xff, 0xc0, 0x01, 0xff, 0x00, 0x0f, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xc0, 0x07, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0x7f, 0xc1, 0xe0, 0x03, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xf0, 0x03, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0x1f, 0x81, 0xe0, 0x03, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xfc, 0x01, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0x06, 0x01, 0xe0, 0x03, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x03, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0x00, 0xfe, 
0x0f, 0xff, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x03, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0x80, 0x7e, 
0x0f, 0xff, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x03, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0x80, 0x7e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1c, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0x1c, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1c, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0x1e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x3e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0x80, 0x7e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0x00, 0x7e, 
0x0f, 0xff, 0x00, 0x00, 0xff, 0xe1, 0xe0, 0x03, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xfe, 0x00, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1e, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x3f, 0xff, 0xf8, 0x01, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x0f, 0xff, 0xe0, 0x03, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xff, 0x00, 0x07, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xe0, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xfe, 
0x0f, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

# Bitmap-Daten in Befehlskette umwandeln
def send_bitmap(ser, data, width, height):
    # ESC * m nL nH
    # m: Modus (0, 1, 32, 33)
    # nL: Niedriger Byte-Wert der Breite (in Bytes)
    # nH: Hoher Byte-Wert der Breite (in Bytes)
    nL = width % 256
    nH = width // 256

    # Senden Sie die Bitmap-Daten zeilenweise
    for i in range(0, height):
        ser.write(b'\x1B' + b'*' + b'\x21' + bytes([nL, nH]))
        ser.write(data[i * width:(i + 1) * width])
        ser.write(b'\n')

# Drucker initialisieren
ser.write(b'\x1B' + b'@')

# Bitmap-Daten senden
send_bitmap(ser, bitmap_data, 128, 55)

# Drucker beenden
ser.write(b'\x1D' + b'V' + b'B' + b'\x00')

# Serielle Verbindung schlie√üen
ser.close()
